<h1>Introduction</h1>
<p>
Si vous n'avez jamais utilisé auparavant un langage orienté objet, 
l'objectif de ce chapitre consiste en une introduction aux concepts 
de base de la <b>programmation orientée objet (POO)</b>. Nous aurons à étudier la notion de <b>classe</b>, d'<b>objet</b>, d'<b>association</b>, d'<b>héritage</b>, d'<b>interface</b>, de <b>package</b> et de <b>pattern</b> ainsi que leur implementation avec le langage <b>Java</b>. 
</p>
<h2 class="title">Classe</h2>
<p>
Dans le monde réel, il est fréquent de rencontrer des objets de même <b>type</b> ou <b>classe</b>. Par exemple, il existe des milliers de voitures. Une voiture est entre autre définie par une marque et un modèle qui sont ses attributs
et son comportement définit ses actions ou méthodes <b>(rouler, freiner, arrêter...)</b>... 
<a href="poo/classe" class="readmore fa fa-chevron-right"  aria-hidden="true"></a>
</p>
<h2 class="title">Objet</h2>
<p>
Un <b>objet</b> est une instance d'une classe et naturellement, il peut exister au sein d'une même application, plusieurs objets du même type. Un objet est obtenu par instantiation, ici nous créons une seule voiture v de marque <b>BMW</b> et de modèle <b>X5</b>
et ensuite nous invoquons sa méthode rouler... <a class="readmore fa fa-chevron-right"  aria-hidden="true" href="poo/objet"></a>
</p>
<h2 class="title">Association</h2>
<p>
Une <b>association</b> est la relation inter-classe qui permet à un objet d'une classe de pouvoir collaborer avec un autre objet d'une autre classe. Leur relation peut être unidirectionnelle ou bidirectionnelle. Par exemple, une Voiture v a un propriétaire p qui est de type Personne...
<a class="readmore fa fa-chevron-right"  aria-hidden="true" href="poo/association"></a>  
</p>
<h2 class="title">Héritage</h2>
<p>
L'<b>héritage</b> est spécifique à la programmation orientée objet. Il consiste à créer une nouvelle classe à partir d'une classe de base et de mettre en place une hiérarchie. La classe dérivée contiendra les attributs et les méthodes de la classe mère... <a class="readmore fa fa-chevron-right"  aria-hidden="true" href="poo/heritage"></a>
</p>

<h2 class="title">Interface</h2>
<p>
Une <b>interface</b> definit une action ou un groupe d'actions prédéfinis qui doivent être réalisés par la classe ou les classes qui l'implémentent. Elle permet ainsi la mise en oeuvre d'une application dynamique et de plusieurs solutions à un même problème donné...  <a class="readmore fa fa-chevron-right"  aria-hidden="true" href="poo/interface"></a>
</p>

<h2 class="title">Package</h2>
<p>
Un <b>package</b> est assimilable à un répertoire pour ranger des classes, des interfaces ou tout autre fichier logiciel. Il permet une structuration de l'application pour la rendre modulaire. Un package ou un ensemble peut être compressé dans une archive pour faciliter sa distribution...
<a class="readmore fa fa-chevron-right"  aria-hidden="true" href="poo/package"></a>
</p>

<h2 class="title">Pattern</h2>
<p>
Dans l'informatique, un <b>pattern</b> ou <b>modèle de conception</b> est une solution générale à un problème commun rencontré dans un contexte donné. C'est un modèle abstrait existant qui peut être réutilisé dans votre application et son implémentation vous incombe totalement...
<a class="readmore fa fa-chevron-right"  aria-hidden="true" href="poo/pattern"></a>
</p>

<br/>
<div class="nav">
 	<p><a href="mobile">&lt; Précédent</a></p>
 	<p><a href="poo/classe">Suivant &gt;</a></p>
</div>