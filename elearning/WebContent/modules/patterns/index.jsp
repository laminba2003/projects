<h1>Introduction</h1>
<p>
Dans l'informatique, un <b>pattern</b> ou <b>modèle de conception</b> est une solution générale à un problème commun rencontré dans un contexte donné. C'est un modèle abstrait existant qui peut être réutilisé dans votre application et son implémentation vous incombe totalement.
Les modèles de conception peuvent accélérer le processus de développement en fournissant des solutions testées et prouvées aux différents paradigmes de développement,
mais un usage abusif peut conduire à un système difficile à comprendre et à maintenir.
Il existe 3 catégories de modèles : <br>

<h2 class="title">Modèles de création</h2>
<p>
Ces modèles sont pour la création de classes et d'objets : 
	<ul>
		<li><a >Abstract Factory</a></li>
		<li><a >Builder</a></li>
		<li><a >Factory Method</a></li>
		<li><a >Object Pool</a></li>
		<li><a >Prototype</a></li>
		<li><a >Singleton</a></li>
	</ul>
</p>
<h2 class="title">Modèles de structure</h2>
<p>
Ces modèles sont pour la composition de classes et d'objets :
	<ul>
		<li><a >Adapter</a></li>
		<li><a >Bridge</a></li>
		<li><a >Composite</a></li>
		<li><a >Decorator</a></li>
		<li><a >Facade</a></li>
		<li><a >Flyweight</a></li>
		<li><a >Private Class Data</a></li>
		<li><a >Proxy</a></li>
	</ul>
</p>
<h2 class="title">Modèles de comportement</h2>
<p>
Ces modèles sont pour la communication inter-classe et inter-objet :
	<ul>
		<li><a >Chain of responsibility</a></li>
		<li><a >Command</a></li>
		<li><a >Interpreter</a></li>
		<li><a >Iterator</a></li>
		<li><a >Mediator</a></li>
		<li><a >Memento</a></li>
		<li><a >Null Object</a></li>
		<li><a >Observer</a></li>
		<li><a >State</a></li>
		<li><a >Strategy</a></li>
		<li><a >Template method</a></li>
		<li><a >Visitor</a></li>
	</ul>
</p>

</p>

<div class="nav">
 	<p><a href="uml">&lt; Précédent</a></p>
 	<p><a >Suivant &gt;</a></p>
</div>
